name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Instalar as dependências
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Build do Strapi Admin
      - name: Build Strapi Admin
        run: NODE_ENV=production yarn build

      # Copiar código para Digital Ocean
      - name: Copy code to Digital Ocean
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: root
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: ".,!node_modules"
          target: "/VemNenem-Backend"

      # Executar no servidor
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: root
          port: 22
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /VemNenem-Backend
            yarn install --production --frozen-lockfile
            pm2 restart vem-nenem || pm2 start yarn --name "vem-nenem" -- start